
#############################################################################
# Automatically generated by pymola

from __future__ import print_function
import sympy
import sympy.physics.mechanics as mech
sympy.init_printing()
mech.init_vprinting()
import scipy.integrate
import pylab as pl

t = sympy.symbols('t')


# declaration
p = {}
x0 = {}
x = []
g = sympy.symbols('g')
p['g'] = 9.81
c = sympy.symbols('c')
p['c'] = 0.90
height = mech.dynamicsymbols('height')
x0['height'] = start=10
x += [height]
velocity = mech.dynamicsymbols('velocity')
x0['velocity'] = start=0
x += [velocity]



# equations
eqs=[
    height.diff(t) - velocity,
    velocity.diff(t) - -(g),
    ]


# when equations




x = sympy.Matrix(x)
x_dot = x.diff(t)

sol = sympy.solve(eqs, x_dot)

f = sympy.Matrix([sol[xi] for xi in x_dot])
print(x)
print(f)

p_vect = [locals()[key] for key in p]

print(p_vect)

f_lam = sympy.lambdify((t,x,p_vect), f)

x0 = [0,0]
p0 = [1,1]

sim = scipy.integrate.ode(f_lam)
sim.set_initial_value([0,0])
sim.set_f_params(p0)
tf = 10
dt = 0.1

data = {
    'x': [],
    't': [],
}

while  sim.t < tf:
    sim.integrate(sim.t + dt)
    data['x'] += [sim.y]
    data['t'] += [sim.t]

pl.plot(data['t'], data['x'])
pl.show()

#############################################################################
